#!/usr/bin/env python3
"""
Script de debug pour tester le service de d√©tection IA
"""

import sys
import os

# Ajouter le r√©pertoire racine au path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_ai_detection_service():
    """Test du service de d√©tection IA"""

    print("üîç Test du service de d√©tection IA...")

    try:
        # Importer le service
        from app.services.ai_detection_service_v2 import AIDetectionService
        print("‚úÖ Import du service r√©ussi")

        # Cr√©er une instance
        ai_service = AIDetectionService()
        print("‚úÖ Cr√©ation de l'instance r√©ussie")

        # V√©rifier que TensorFlow est disponible
        try:
            import tensorflow as tf
            print(f"‚úÖ TensorFlow version: {tf.__version__}")
        except ImportError:
            print("‚ùå TensorFlow non disponible")
            return

        # Chercher une image de test
        test_images_dir = "test_images"
        if not os.path.exists(test_images_dir):
            print(f"‚ùå Dossier {test_images_dir} manquant")
            return

        test_image = None
        for file in os.listdir(test_images_dir):
            if file.lower().endswith(('.png', '.jpg', '.jpeg')):
                test_image = os.path.join(test_images_dir, file)
                break

        if not test_image:
            print("‚ùå Aucune image de test trouv√©e")
            return

        print(f"üì∏ Image de test: {test_image}")

        # Tester la d√©tection
        result = ai_service.detect_ai_generated(test_image)
        print(f"‚úÖ D√©tection r√©ussie: {result}")

    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()

def test_image_service():
    """Test du service d'images complet"""

    print("\nüîç Test du service d'images...")

    try:
        from app.services.image_service import ImageService
        from app.services.ai_detection_service_v2 import AIDetectionService

        # Cr√©er les services
        ai_service = AIDetectionService()
        image_service = ImageService("uploads", ai_service)

        print("‚úÖ Services cr√©√©s avec succ√®s")

        # Tester l'acc√®s aux m√©thodes
        print(f"‚úÖ ai_service disponible: {hasattr(image_service, 'ai_service')}")
        print(f"‚úÖ detect_ai_generated disponible: {hasattr(image_service.ai_service, 'detect_ai_generated')}")

    except Exception as e:
        print(f"‚ùå Erreur service d'images: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ Debug des services de d√©tection IA")
    print("=" * 50)

    test_ai_detection_service()
    test_image_service()

    print("\n" + "=" * 50)
    print("‚ú® Tests termin√©s")
